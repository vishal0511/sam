AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Resources:
  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/CloudWatchFullAccess'
      Path: /
  vbtestfunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName : !Sub "${AWS::StackName}-vbtest"
      Handler: 'src/functions/test/lambda_function.lambda_handler'
      Description: 'Restful API endpoint'
      CodeUri: deploy.zip
      Runtime: python2.7
      Role: !GetAtt LambdaExecutionRole.Arn
      Timeout: 60
      MemorySize: 512
  vbtestperm:
    Type: "AWS::Lambda::Permission"
    DependsOn:
      - ApiGateway
      - vbtestfunction
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref vbtestfunction
      Principal: apigateway.amazonaws.com
  ApiGateway:
    Type: 'AWS::Serverless::Api'
    Properties:
      StageName: v1
      DefinitionBody:
        swagger: 2.0
        info:
          title: !Ref AWS::StackName
        paths:
          "/home":
            get:
              responses: {}
              x-amazon-apigateway-integration:
                httpMethod: post
                type: aws_proxy
                uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${vbtestfunction.Arn}/invocations'
                passthroughBehavior: "when_no_match"
Outputs:
  ApiUrl:
    Description: URL of your API endpoint
    Value: !Join
      - ''
      - - https://
        - !Ref ApiGateway
        - '.execute-api.'
        - !Ref 'AWS::Region'
        - '.amazonaws.com/v1'
